// SND_LOOP는 SND_ASYNC랑 같이 써야 함.
// WAV파일만 됨
// 두개의 노래 동시는 X 이전에 재생되던 거 멈추고 새로운게 시작 O
// PLAYSOUND함수 자체가 호출되면 이전에 실행되던게 꺼짐.

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <conio.h>
#include <Windows.h>
#include <mmsystem.h>

#pragma warning (disable:4996)
#pragma comment(lib,"winmm.lib")

// 비동기적 SND_ASYNC, 동기적 SND_SYNC, 노래무한반복 SND_LOOP 
// 비동기 = 아닐비, 한가지 동 한가지가 아니다 여러개 실행가능.
// 중간 정지 SND_SYNC일떄는 안됨.
// 아이디어 : 노래방 기기, 노래맞추기 
void main()
{
	int i = 0;
	int stop = 1;
	unsigned char ch; // 그냥 char도 상관없음.
	
	/* 1번
	printf("1분짜리 노래가 흘러나옵니다.\n");
	PlaySound(TEXT("BungBung.WAV"), NULL, SND_SYNC); 
	printf("노래끝 !!\n\n");
	*/

	/*2번
	printf("1~3번중 키 하나만 누르세요. 다른노래듣고싶으면 4 멈추고싶으면 s \n");
	while (stop) {
		if (kbhit()) {
			ch = getch();
			switch (ch) {
			case '1': // 노래1번
				PlaySound(TEXT("Sing1.WAV"), NULL, SND_ASYNC); // | SND_LOOP 
				printf("노래 1번 재생 완료\n");  
				break;

			case '2': // 노래2번
				PlaySound(TEXT("Sing2.WAV"), NULL, SND_ASYNC);
				printf("노래 2번 재생 완료\n");
				break;

			case '3': // 노래3번
				PlaySound(TEXT("Sing3.WAV"), NULL, SND_ASYNC);
				printf("노래 3번 재생 완료\n");
				break;

			case '4': // 노래 정지
				PlaySound(NULL, 0, 0);
				break;

			case 's': // 프로그램 종료 !
				exit(0);
				//stop = 0; 
				break;
			} // switch
		} // kbhit
	} // while
	*/
	printf("\n\n노래연습끝");
}
// https://www.media.io/ 노래 변환 홈페이지
// https://blog.naver.com/djtjf12/220625803727 // 추가 설명 링크